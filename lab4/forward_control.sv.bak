`timescale 1ns/10ps
module forward_control();

		// DataA forwarding from 2 cycle before
//		if (Rn_IF == Rd_Reg && Rd_Reg != 5'b11111 && RegWrite_Reg == 1'b1) begin
//			assign Cycle2_FW_A_IF = 1'b1;
//		end
//		else begin
//			assign Cycle2_FW_A_IF = 1'b0;
//		end
//
////		assign Cycle2_FW_A_IF = (Rn_IF == Rd_Reg && Rd_Reg != 5'b11111 && RegWrite_Reg == 1'b1);
//		
//		// DataB forwarding from 2 cycle before
//		if (((Rm_IF == Rd_Reg && Reg2Loc_IF == 1'b1) || (Rd_IF == Rd_Reg && Reg2Loc_IF == 1'b0)) &&  (Rd_Reg != 5'b11111 && RegWrite_Reg == 1'b1)) begin
//			assign Cycle2_FW_B_IF = 1'b1;
//		end
//		else begin
//			assign Cycle2_FW_B_IF = 1'b0;
//		end
//		
//		// DataA forwarding from 1 cycle before
//		if (Rn_IF == Rd && Rd != 5'b11111 && RegWrite == 1'b1) begin
//			assign Cycle1_FW_A_IF = RegWrSrc;
//		end
//		else begin
//			assign Cycle1_FW_A_IF = 2'b00;
//		end
//		
//		// DataB forwarding from 1 cycle before
//		if (((Rm_IF == Rd && Reg2Loc_IF == 1'b1) || (Rd_IF == Rd && Reg2Loc_IF == 1'b0)) && (Rd != 5'b11111 && RegWrite == 1'b1))begin
//			assign Cycle1_FW_B_IF = RegWrSrc;
//		end
//		else begin
//			assign Cycle1_FW_B_IF = 2'b00;
//		end
endmodule
